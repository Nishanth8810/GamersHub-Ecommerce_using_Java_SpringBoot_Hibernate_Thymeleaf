spring.h2.console.enabled=true

spring.datasource.url=jdbc:mysql://localhost:3306/StoreShop?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false

spring.datasource.username=root

spring.datasource.password=television12@@

spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect

spring.main.allow-bean-definition-overriding=true

management.endpoints.web.exposure.include = *

#
#spring.servlet.multipart.max-file-size=20MB
#spring.servlet.multipart.max-request-size=20MB


#Oauth2 configure
#spring.security.oauth2.client.registration.google.client-id= 
#spring.security.oauth2.client.registration.google.client-secret= 

#paytm
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email =